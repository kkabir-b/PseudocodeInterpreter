expr       :
           : IDENTIFIER EQ expr
           : comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr  : NOT comp-expr
           : arith-expr ((EE|LT|LTE|GT|GTE|NE) arith-expr)*

arith-expr :
           : term ((Plus|Minus) term)*

term       : factor((Mul|Div) factor)*

factor     : (Plus|Minus) factor
           : power

power      : call (Power factor)*

call       : atom (expr (IDENTIFIER (COMMA expr)*)? RPAREN)?

atom       : Int|Real|String|Identifier
           : LParen expr RParen

if-expr    : KEYWORD: IF expr KEYWORD:THEN expr
             (KEYWORD:ELSE expr)?

for-expr  : KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr
             (KEYWORD:STEP expr)? expr
while-expr: KEYWORD:WHILE expr KEYWORD:DO expr

repeat-expr: KEYWORK:REPEAT expr KEYWORD:UNTIL expr

func-def   : KEYWORK:FUNCTION IDENTIFIER?
             LPAREM (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
             ARROW expr KEYWORD:RETURNS datatype
